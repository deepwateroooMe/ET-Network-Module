#+latex_class: cn-article
#+title: ET-EUI 服务器 + 当前客户端（作为与服务器的网络交互部分）
#+author: deepwaterooo 

* ET-EUI 服务器，ET-Network-Module 作为客户端的网络模块，连接测试客户端非网络模块逻辑
** 双端网络连接过程中的小错误及更正
- 客户端发Ping 到服务器，服务器返回一个时间消息
- 客户端再接收 OnAccept() 或是 OnReceive() 的时候，抛出了一个底层的异常
- 这个Ping 消息比较特殊，既是外网消息，但又只有一个 rpcID. 跳过了这个，便没有消息内容了。感觉原因可能是这个
*** 双端通信中的 protobuf 小错误
- 这里主要是读的时候， Loom Update() 的时候 TChannel 抛异常
- 服务器端： 
  - ./pic/readme_20230307_082738.png
- 客户端： 
  - ./pic/readme_20230307_082732.png
- Windows 10 上 *想要使用键绑定来自 Visual Studio 中从 emacs 中打开当前文件，但是暂时实现不了，先放一下* 。下午或是晚上有精力再弄
- 这里可以确定，用这个客户端小项目自带的服务器（是从ET6.0 版本构建生成的）是可以运行得通的。
* root cause
- 可以找到最终的原因：是因为这个ET-EUI 先前自己测试的时候添加过不少测试，中间有很多 protobuf 消息可能会存在重复或是混乱。
- 现能找到原因：当客户端发C2R_Login 登录请求消息时，当前的ET-EUI 不知道什么原因， opcode 仍然是 10023, 但它试图反序列化时将消息类型C2R_Login 弄成了是其它类型。
- 接下来会更正自己的这个服务器端的错误：在没有环境可以运行的情况下，检查梳理一遍相关的逻辑，更正必要的可能会引起出错的地方

[[./pic/readme_20230311_092732.png]]
- 现在就可以明白： *客户端与服务器必须得统一同一类消息的 opcode, 同一个消息 C2R_Login, 两端的 opcode 不同或是消息的类型 type 不同，必出错。*
- 现在只要就上面现在的理解，将客户端注册登录过程中的几次往返消息，两端的 opcode 与消息类型统一，双端的连接过程应该就没有问题了【连接完成，没有问题】
*** 双端可以通信了，登录注册可以成功，再之后的进入地图什么的，稍后逻辑小错误理解，逻辑整理

** ILRuntime 客户端非网络模块逻辑：
- 之前试着连接过安卓 SDK, 并采用过不同的设计【回调 callback 的形式，以及在 unity 游戏端实现通过适配代理实现安卓 broadcastReceiver 在游戏端的接收】来实现从 unity 游戏端调用安卓原生方法，以实现游戏里调用系统音量，以及对系统音量变化的监听等。
- 现在考虑到游戏的相对复杂性， *暂时把安卓 SDK 整合的这一小块逻辑去掉，不要。*
- 【首先连接的逻辑：】当客户端登录注册到注册登录服，注册登录服会为当前客户端申请分配一个网关服，并将网关服的连接住处返回给客户端；客户端去连接网关服，当客户端收到网关服确认： *当前客户端与网关服连接成功，客户端的逻辑就直接进入ILRuntime 热更新程序域里去* 。
- 【热更新资源包：】热更新程序域里的热更新资源包是需要从服务器下载的。以前全是用本地资源包，现在需要连接和测试客户端与服务器端资源包的上传下载等。

- 爱表哥，爱生活！！！

